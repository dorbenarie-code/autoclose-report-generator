name: CI & Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # כל תג שמתחיל ב־v

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install system dependencies (Pillow)
        run: |
          sudo apt-get update
          sudo apt-get install -y libjpeg-dev zlib1g-dev

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Clear pip cache
        run: pip cache purge || true

      - name: Install deps (wheel-only)
        run: |
          pip install --upgrade pip
          PIP_ONLY_BINARY=":all:" \
          pip install --prefer-binary -r requirements.txt

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Run mypy (type checks)
        run: mypy .

      - name: Run tests (pytest or make test)
        run: |
          if [ -f Makefile ] && grep -q '^test:' Makefile; then
            make test
          else
            pytest
          fi

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install system dependencies (Pillow)
        run: |
          sudo apt-get update
          sudo apt-get install -y libjpeg-dev zlib1g-dev

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Clear pip cache
        run: pip cache purge || true

      - name: Install deps (wheel-only)
        run: |
          pip install --upgrade pip
          PIP_ONLY_BINARY=":all:" \
          pip install --prefer-binary -r requirements.txt

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Run mypy (type checks)
        run: mypy .

      - name: Run tests (pytest or make test)
        run: |
          if [ -f Makefile ] && grep -q '^test:' Makefile; then
            make test
          else
            pytest
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Clear pip cache
        run: pip cache purge || true
      - name: Deploy to Production
        run: |
          echo "Deploying to Production..."
          # פה תוכל להוסיף את הפקודות להפצת קוד ל־Production (למשל, Docker, SSH, Heroku)
